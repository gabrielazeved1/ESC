$date
	Fri Jul 11 13:29:44 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_add16 $end
$var wire 16 ! sum [15:0] $end
$var reg 16 " a [15:0] $end
$var reg 16 # b [15:0] $end
$scope module uut $end
$var wire 16 $ a [15:0] $end
$var wire 16 % b [15:0] $end
$var wire 16 & sum [15:0] $end
$var wire 16 ' carry [15:0] $end
$scope begin add_bit[0] $end
$var parameter 2 ( i $end
$scope begin genblk1 $end
$scope module fa $end
$var wire 1 ) a $end
$var wire 1 * b $end
$var wire 1 + cin $end
$var wire 1 , cout $end
$var wire 1 - sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin add_bit[1] $end
$var parameter 2 . i $end
$scope begin genblk1 $end
$scope module fa $end
$var wire 1 / a $end
$var wire 1 0 b $end
$var wire 1 1 cin $end
$var wire 1 2 cout $end
$var wire 1 3 sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin add_bit[2] $end
$var parameter 3 4 i $end
$scope begin genblk1 $end
$scope module fa $end
$var wire 1 5 a $end
$var wire 1 6 b $end
$var wire 1 7 cin $end
$var wire 1 8 cout $end
$var wire 1 9 sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin add_bit[3] $end
$var parameter 3 : i $end
$scope begin genblk1 $end
$scope module fa $end
$var wire 1 ; a $end
$var wire 1 < b $end
$var wire 1 = cin $end
$var wire 1 > cout $end
$var wire 1 ? sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin add_bit[4] $end
$var parameter 4 @ i $end
$scope begin genblk1 $end
$scope module fa $end
$var wire 1 A a $end
$var wire 1 B b $end
$var wire 1 C cin $end
$var wire 1 D cout $end
$var wire 1 E sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin add_bit[5] $end
$var parameter 4 F i $end
$scope begin genblk1 $end
$scope module fa $end
$var wire 1 G a $end
$var wire 1 H b $end
$var wire 1 I cin $end
$var wire 1 J cout $end
$var wire 1 K sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin add_bit[6] $end
$var parameter 4 L i $end
$scope begin genblk1 $end
$scope module fa $end
$var wire 1 M a $end
$var wire 1 N b $end
$var wire 1 O cin $end
$var wire 1 P cout $end
$var wire 1 Q sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin add_bit[7] $end
$var parameter 4 R i $end
$scope begin genblk1 $end
$scope module fa $end
$var wire 1 S a $end
$var wire 1 T b $end
$var wire 1 U cin $end
$var wire 1 V cout $end
$var wire 1 W sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin add_bit[8] $end
$var parameter 5 X i $end
$scope begin genblk1 $end
$scope module fa $end
$var wire 1 Y a $end
$var wire 1 Z b $end
$var wire 1 [ cin $end
$var wire 1 \ cout $end
$var wire 1 ] sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin add_bit[9] $end
$var parameter 5 ^ i $end
$scope begin genblk1 $end
$scope module fa $end
$var wire 1 _ a $end
$var wire 1 ` b $end
$var wire 1 a cin $end
$var wire 1 b cout $end
$var wire 1 c sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin add_bit[10] $end
$var parameter 5 d i $end
$scope begin genblk1 $end
$scope module fa $end
$var wire 1 e a $end
$var wire 1 f b $end
$var wire 1 g cin $end
$var wire 1 h cout $end
$var wire 1 i sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin add_bit[11] $end
$var parameter 5 j i $end
$scope begin genblk1 $end
$scope module fa $end
$var wire 1 k a $end
$var wire 1 l b $end
$var wire 1 m cin $end
$var wire 1 n cout $end
$var wire 1 o sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin add_bit[12] $end
$var parameter 5 p i $end
$scope begin genblk1 $end
$scope module fa $end
$var wire 1 q a $end
$var wire 1 r b $end
$var wire 1 s cin $end
$var wire 1 t cout $end
$var wire 1 u sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin add_bit[13] $end
$var parameter 5 v i $end
$scope begin genblk1 $end
$scope module fa $end
$var wire 1 w a $end
$var wire 1 x b $end
$var wire 1 y cin $end
$var wire 1 z cout $end
$var wire 1 { sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin add_bit[14] $end
$var parameter 5 | i $end
$scope begin genblk1 $end
$scope module fa $end
$var wire 1 } a $end
$var wire 1 ~ b $end
$var wire 1 !" cin $end
$var wire 1 "" cout $end
$var wire 1 #" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin add_bit[15] $end
$var parameter 5 $" i $end
$scope begin genblk1 $end
$scope module fa $end
$var wire 1 %" a $end
$var wire 1 &" b $end
$var wire 1 '" cin $end
$var wire 1 (" cout $end
$var wire 1 )" sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1111 $"
b1110 |
b1101 v
b1100 p
b1011 j
b1010 d
b1001 ^
b1000 X
b111 R
b110 L
b101 F
b100 @
b11 :
b10 4
b1 .
b0 (
$end
#0
$dumpvars
0)"
0("
0'"
0&"
0%"
0#"
0""
0!"
0~
0}
0{
0z
0y
0x
0w
0u
0t
0s
0r
0q
0o
0n
0m
0l
0k
0i
0h
0g
0f
0e
0c
0b
0a
0`
0_
0]
0\
0[
0Z
0Y
0W
0V
0U
0T
0S
0Q
0P
0O
0N
0M
0K
0J
0I
0H
0G
0E
0D
0C
0B
0A
0?
0>
0=
0<
0;
09
08
07
06
05
13
02
01
10
0/
1-
0,
0+
0*
1)
b0 '
b11 &
b10 %
b1 $
b10 #
b1 "
b11 !
$end
#10000
19
1?
1E
1K
1Q
b11111111 !
b11111111 &
1W
1*
16
1<
0)
1A
1G
1M
1S
b1111 #
b1111 %
b11110000 "
b11110000 $
#20000
1("
1'"
1""
1!"
1z
1y
1t
1s
1n
1m
1h
1g
1b
1a
1\
1[
1V
0W
1U
1P
0Q
1O
1J
0K
1I
1D
0E
1C
1>
0?
1=
18
09
17
12
03
11
b1111111111111111 '
1,
0-
0]
0c
0i
0o
0u
0{
0#"
b0 !
b0 &
0)"
00
06
0<
1)
1/
15
1;
1Y
1_
1e
1k
1q
1w
1}
1%"
b1 #
b1 %
b1111111111111111 "
b1111111111111111 $
#30000
0("
1)"
0'"
0""
1#"
0!"
0z
1{
0y
0t
1u
0s
0n
1o
0m
0h
1i
0g
0b
1c
0a
0\
1]
0[
0V
1W
0U
0P
1Q
0O
0J
1K
0I
0D
1E
0C
0>
1?
0=
08
19
07
02
13
01
b0 '
0,
b1111111111111111 !
b1111111111111111 &
1-
16
1B
1N
1Z
1f
1r
1~
0)
05
0A
0M
0Y
0e
0q
0}
b101010101010101 #
b101010101010101 %
b1010101010101010 "
b1010101010101010 $
#40000
