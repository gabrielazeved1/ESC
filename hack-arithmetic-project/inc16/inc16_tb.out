#! /opt/homebrew/Cellar/icarus-verilog/12.0/bin/vvp
:ivl_version "12.0 (stable)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "/opt/homebrew/Cellar/icarus-verilog/12.0/lib/ivl/system.vpi";
:vpi_module "/opt/homebrew/Cellar/icarus-verilog/12.0/lib/ivl/vhdl_sys.vpi";
:vpi_module "/opt/homebrew/Cellar/icarus-verilog/12.0/lib/ivl/vhdl_textio.vpi";
:vpi_module "/opt/homebrew/Cellar/icarus-verilog/12.0/lib/ivl/v2005_math.vpi";
:vpi_module "/opt/homebrew/Cellar/icarus-verilog/12.0/lib/ivl/va_math.vpi";
S_0x156736040 .scope module, "tb_inc16" "tb_inc16" 2 3;
 .timescale -9 -12;
v0x15675ac70_0 .var "in", 15 0;
v0x15675ad50_0 .net "out", 15 0, L_0x156763c90;  1 drivers
S_0x156721e80 .scope module, "uut" "inc16" 2 8, 3 1 0, S_0x156736040;
 .timescale 0 0;
    .port_info 0 /INPUT 16 "in";
    .port_info 1 /OUTPUT 16 "out";
v0x15675aa30_0 .net "in", 15 0, v0x15675ac70_0;  1 drivers
L_0x148068010 .functor BUFT 1, C4<0000000000000001>, C4<0>, C4<0>, C4<0>;
v0x15675aae0_0 .net "one", 15 0, L_0x148068010;  1 drivers
v0x15675ab90_0 .net "out", 15 0, L_0x156763c90;  alias, 1 drivers
S_0x156733e30 .scope module, "adder" "add16" 3 8, 3 17 0, S_0x156721e80;
 .timescale 0 0;
    .port_info 0 /INPUT 16 "a";
    .port_info 1 /INPUT 16 "b";
    .port_info 2 /OUTPUT 16 "sum";
v0x15675a770_0 .net "a", 15 0, v0x15675ac70_0;  alias, 1 drivers
v0x15675a800_0 .net "b", 15 0, L_0x148068010;  alias, 1 drivers
v0x15675a890_0 .net "carry", 15 0, L_0x1567648e0;  1 drivers
v0x15675a930_0 .net "sum", 15 0, L_0x156763c90;  alias, 1 drivers
L_0x15675b510 .part v0x15675ac70_0, 0, 1;
L_0x15675b630 .part L_0x148068010, 0, 1;
L_0x15675bd50 .part v0x15675ac70_0, 1, 1;
L_0x15675bef0 .part L_0x148068010, 1, 1;
L_0x15675b910 .part L_0x1567648e0, 0, 1;
L_0x15675c730 .part v0x15675ac70_0, 2, 1;
L_0x15675c850 .part L_0x148068010, 2, 1;
L_0x15675c970 .part L_0x1567648e0, 1, 1;
L_0x15675d050 .part v0x15675ac70_0, 3, 1;
L_0x15675d1c0 .part L_0x148068010, 3, 1;
L_0x15675d2e0 .part L_0x1567648e0, 2, 1;
L_0x15675d970 .part v0x15675ac70_0, 4, 1;
L_0x15675da90 .part L_0x148068010, 4, 1;
L_0x15675dc20 .part L_0x1567648e0, 3, 1;
L_0x15675e2c0 .part v0x15675ac70_0, 5, 1;
L_0x15675e4e0 .part L_0x148068010, 5, 1;
L_0x15675e700 .part L_0x1567648e0, 4, 1;
L_0x15675ecf0 .part v0x15675ac70_0, 6, 1;
L_0x15675ee10 .part L_0x148068010, 6, 1;
L_0x15675e8a0 .part L_0x1567648e0, 5, 1;
L_0x15675f600 .part v0x15675ac70_0, 7, 1;
L_0x15675ef30 .part L_0x148068010, 7, 1;
L_0x15675f850 .part L_0x1567648e0, 6, 1;
L_0x15675ff50 .part v0x15675ac70_0, 8, 1;
L_0x156760070 .part L_0x148068010, 8, 1;
L_0x156760260 .part L_0x1567648e0, 7, 1;
L_0x1567608d0 .part v0x15675ac70_0, 9, 1;
L_0x156760ad0 .part L_0x148068010, 9, 1;
L_0x156760190 .part L_0x1567648e0, 8, 1;
L_0x1567611e0 .part v0x15675ac70_0, 10, 1;
L_0x156761300 .part L_0x148068010, 10, 1;
L_0x156760d80 .part L_0x1567648e0, 9, 1;
L_0x156761ad0 .part v0x15675ac70_0, 11, 1;
L_0x156761420 .part L_0x148068010, 11, 1;
L_0x156761d80 .part L_0x1567648e0, 10, 1;
L_0x1567623e0 .part v0x15675ac70_0, 12, 1;
L_0x156762500 .part L_0x148068010, 12, 1;
L_0x156762620 .part L_0x1567648e0, 11, 1;
L_0x156762cd0 .part v0x15675ac70_0, 13, 1;
L_0x15675e3e0 .part L_0x148068010, 13, 1;
L_0x156761f20 .part L_0x1567648e0, 12, 1;
L_0x156763810 .part v0x15675ac70_0, 14, 1;
L_0x156763930 .part L_0x148068010, 14, 1;
L_0x156763330 .part L_0x1567648e0, 13, 1;
L_0x1567640f0 .part v0x15675ac70_0, 15, 1;
L_0x156763a50 .part L_0x148068010, 15, 1;
L_0x156764380 .part L_0x1567648e0, 14, 1;
LS_0x156763c90_0_0 .concat8 [ 1 1 1 1], L_0x15675af40, L_0x15675b7d0, L_0x15675c180, L_0x15675ca90;
LS_0x156763c90_0_4 .concat8 [ 1 1 1 1], L_0x15675d470, L_0x15675ddb0, L_0x15675be70, L_0x15675f050;
LS_0x156763c90_0_8 .concat8 [ 1 1 1 1], L_0x15675f720, L_0x15675dcc0, L_0x1567609f0, L_0x156760ce0;
LS_0x156763c90_0_12 .concat8 [ 1 1 1 1], L_0x156761bf0, L_0x156762740, L_0x15675e680, L_0x156763bb0;
L_0x156763c90 .concat8 [ 4 4 4 4], LS_0x156763c90_0_0, LS_0x156763c90_0_4, LS_0x156763c90_0_8, LS_0x156763c90_0_12;
LS_0x1567648e0_0_0 .concat8 [ 1 1 1 1], L_0x15675b3c0, L_0x15675bbe0, L_0x15675c5e0, L_0x15675cee0;
LS_0x1567648e0_0_4 .concat8 [ 1 1 1 1], L_0x15675d800, L_0x15675e170, L_0x15675eba0, L_0x15675f4b0;
LS_0x1567648e0_0_8 .concat8 [ 1 1 1 1], L_0x15675fe00, L_0x156760760, L_0x156761070, L_0x156761960;
LS_0x1567648e0_0_12 .concat8 [ 1 1 1 1], L_0x156762270, L_0x156762b80, L_0x1567636c0, L_0x156763f80;
L_0x1567648e0 .concat8 [ 4 4 4 4], LS_0x1567648e0_0_0, LS_0x1567648e0_0_4, LS_0x1567648e0_0_8, LS_0x1567648e0_0_12;
S_0x156731600 .scope generate, "add_bit[0]" "add_bit[0]" 3 26, 3 26 0, S_0x156733e30;
 .timescale 0 0;
P_0x156743680 .param/l "i" 1 3 26, +C4<00>;
S_0x15672edd0 .scope generate, "genblk1" "genblk1" 3 27, 3 27 0, S_0x156731600;
 .timescale 0 0;
S_0x15672c5a0 .scope module, "fa" "fulladder" 3 28, 3 48 0, S_0x15672edd0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "cin";
    .port_info 3 /OUTPUT 1 "sum";
    .port_info 4 /OUTPUT 1 "cout";
L_0x15675ae70 .functor XOR 1, L_0x15675b510, L_0x15675b630, C4<0>, C4<0>;
L_0x148068058 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x15675af40 .functor XOR 1, L_0x15675ae70, L_0x148068058, C4<0>, C4<0>;
L_0x15675b030 .functor AND 1, L_0x15675b510, L_0x15675b630, C4<1>, C4<1>;
L_0x15675b160 .functor AND 1, L_0x15675b510, L_0x148068058, C4<1>, C4<1>;
L_0x15675b210 .functor OR 1, L_0x15675b030, L_0x15675b160, C4<0>, C4<0>;
L_0x15675b350 .functor AND 1, L_0x15675b630, L_0x148068058, C4<1>, C4<1>;
L_0x15675b3c0 .functor OR 1, L_0x15675b210, L_0x15675b350, C4<0>, C4<0>;
v0x1567434f0_0 .net *"_ivl_0", 0 0, L_0x15675ae70;  1 drivers
v0x15674cd00_0 .net *"_ivl_10", 0 0, L_0x15675b350;  1 drivers
v0x15674cdb0_0 .net *"_ivl_4", 0 0, L_0x15675b030;  1 drivers
v0x15674ce70_0 .net *"_ivl_6", 0 0, L_0x15675b160;  1 drivers
v0x15674cf20_0 .net *"_ivl_8", 0 0, L_0x15675b210;  1 drivers
v0x15674d010_0 .net "a", 0 0, L_0x15675b510;  1 drivers
v0x15674d0b0_0 .net "b", 0 0, L_0x15675b630;  1 drivers
v0x15674d150_0 .net "cin", 0 0, L_0x148068058;  1 drivers
v0x15674d1f0_0 .net "cout", 0 0, L_0x15675b3c0;  1 drivers
v0x15674d300_0 .net "sum", 0 0, L_0x15675af40;  1 drivers
S_0x15674d410 .scope generate, "add_bit[1]" "add_bit[1]" 3 26, 3 26 0, S_0x156733e30;
 .timescale 0 0;
P_0x15674d5d0 .param/l "i" 1 3 26, +C4<01>;
S_0x15674d650 .scope generate, "genblk1" "genblk1" 3 27, 3 27 0, S_0x15674d410;
 .timescale 0 0;
S_0x15674d810 .scope module, "fa" "fulladder" 3 36, 3 48 0, S_0x15674d650;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "cin";
    .port_info 3 /OUTPUT 1 "sum";
    .port_info 4 /OUTPUT 1 "cout";
L_0x15675b0e0 .functor XOR 1, L_0x15675bd50, L_0x15675bef0, C4<0>, C4<0>;
L_0x15675b7d0 .functor XOR 1, L_0x15675b0e0, L_0x15675b910, C4<0>, C4<0>;
L_0x15675b880 .functor AND 1, L_0x15675bd50, L_0x15675bef0, C4<1>, C4<1>;
L_0x15675b9b0 .functor AND 1, L_0x15675bd50, L_0x15675b910, C4<1>, C4<1>;
L_0x15675ba60 .functor OR 1, L_0x15675b880, L_0x15675b9b0, C4<0>, C4<0>;
L_0x15675bb70 .functor AND 1, L_0x15675bef0, L_0x15675b910, C4<1>, C4<1>;
L_0x15675bbe0 .functor OR 1, L_0x15675ba60, L_0x15675bb70, C4<0>, C4<0>;
v0x15674da50_0 .net *"_ivl_0", 0 0, L_0x15675b0e0;  1 drivers
v0x15674db10_0 .net *"_ivl_10", 0 0, L_0x15675bb70;  1 drivers
v0x15674dbc0_0 .net *"_ivl_4", 0 0, L_0x15675b880;  1 drivers
v0x15674dc80_0 .net *"_ivl_6", 0 0, L_0x15675b9b0;  1 drivers
v0x15674dd30_0 .net *"_ivl_8", 0 0, L_0x15675ba60;  1 drivers
v0x15674de20_0 .net "a", 0 0, L_0x15675bd50;  1 drivers
v0x15674dec0_0 .net "b", 0 0, L_0x15675bef0;  1 drivers
v0x15674df60_0 .net "cin", 0 0, L_0x15675b910;  1 drivers
v0x15674e000_0 .net "cout", 0 0, L_0x15675bbe0;  1 drivers
v0x15674e110_0 .net "sum", 0 0, L_0x15675b7d0;  1 drivers
S_0x15674e220 .scope generate, "add_bit[2]" "add_bit[2]" 3 26, 3 26 0, S_0x156733e30;
 .timescale 0 0;
P_0x15674e3e0 .param/l "i" 1 3 26, +C4<010>;
S_0x15674e460 .scope generate, "genblk1" "genblk1" 3 27, 3 27 0, S_0x15674e220;
 .timescale 0 0;
S_0x15674e620 .scope module, "fa" "fulladder" 3 36, 3 48 0, S_0x15674e460;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "cin";
    .port_info 3 /OUTPUT 1 "sum";
    .port_info 4 /OUTPUT 1 "cout";
L_0x15675c110 .functor XOR 1, L_0x15675c730, L_0x15675c850, C4<0>, C4<0>;
L_0x15675c180 .functor XOR 1, L_0x15675c110, L_0x15675c970, C4<0>, C4<0>;
L_0x15675c250 .functor AND 1, L_0x15675c730, L_0x15675c850, C4<1>, C4<1>;
L_0x15675c380 .functor AND 1, L_0x15675c730, L_0x15675c970, C4<1>, C4<1>;
L_0x15675c430 .functor OR 1, L_0x15675c250, L_0x15675c380, C4<0>, C4<0>;
L_0x15675c570 .functor AND 1, L_0x15675c850, L_0x15675c970, C4<1>, C4<1>;
L_0x15675c5e0 .functor OR 1, L_0x15675c430, L_0x15675c570, C4<0>, C4<0>;
v0x15674e890_0 .net *"_ivl_0", 0 0, L_0x15675c110;  1 drivers
v0x15674e930_0 .net *"_ivl_10", 0 0, L_0x15675c570;  1 drivers
v0x15674e9e0_0 .net *"_ivl_4", 0 0, L_0x15675c250;  1 drivers
v0x15674eaa0_0 .net *"_ivl_6", 0 0, L_0x15675c380;  1 drivers
v0x15674eb50_0 .net *"_ivl_8", 0 0, L_0x15675c430;  1 drivers
v0x15674ec40_0 .net "a", 0 0, L_0x15675c730;  1 drivers
v0x15674ece0_0 .net "b", 0 0, L_0x15675c850;  1 drivers
v0x15674ed80_0 .net "cin", 0 0, L_0x15675c970;  1 drivers
v0x15674ee20_0 .net "cout", 0 0, L_0x15675c5e0;  1 drivers
v0x15674ef30_0 .net "sum", 0 0, L_0x15675c180;  1 drivers
S_0x15674f040 .scope generate, "add_bit[3]" "add_bit[3]" 3 26, 3 26 0, S_0x156733e30;
 .timescale 0 0;
P_0x15674f200 .param/l "i" 1 3 26, +C4<011>;
S_0x15674f280 .scope generate, "genblk1" "genblk1" 3 27, 3 27 0, S_0x15674f040;
 .timescale 0 0;
S_0x15674f440 .scope module, "fa" "fulladder" 3 36, 3 48 0, S_0x15674f280;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "cin";
    .port_info 3 /OUTPUT 1 "sum";
    .port_info 4 /OUTPUT 1 "cout";
L_0x15675c300 .functor XOR 1, L_0x15675d050, L_0x15675d1c0, C4<0>, C4<0>;
L_0x15675ca90 .functor XOR 1, L_0x15675c300, L_0x15675d2e0, C4<0>, C4<0>;
L_0x15675cb80 .functor AND 1, L_0x15675d050, L_0x15675d1c0, C4<1>, C4<1>;
L_0x15675ccb0 .functor AND 1, L_0x15675d050, L_0x15675d2e0, C4<1>, C4<1>;
L_0x15675cd60 .functor OR 1, L_0x15675cb80, L_0x15675ccb0, C4<0>, C4<0>;
L_0x15675ce70 .functor AND 1, L_0x15675d1c0, L_0x15675d2e0, C4<1>, C4<1>;
L_0x15675cee0 .functor OR 1, L_0x15675cd60, L_0x15675ce70, C4<0>, C4<0>;
v0x15674f680_0 .net *"_ivl_0", 0 0, L_0x15675c300;  1 drivers
v0x15674f740_0 .net *"_ivl_10", 0 0, L_0x15675ce70;  1 drivers
v0x15674f7f0_0 .net *"_ivl_4", 0 0, L_0x15675cb80;  1 drivers
v0x15674f8b0_0 .net *"_ivl_6", 0 0, L_0x15675ccb0;  1 drivers
v0x15674f960_0 .net *"_ivl_8", 0 0, L_0x15675cd60;  1 drivers
v0x15674fa50_0 .net "a", 0 0, L_0x15675d050;  1 drivers
v0x15674faf0_0 .net "b", 0 0, L_0x15675d1c0;  1 drivers
v0x15674fb90_0 .net "cin", 0 0, L_0x15675d2e0;  1 drivers
v0x15674fc30_0 .net "cout", 0 0, L_0x15675cee0;  1 drivers
v0x15674fd40_0 .net "sum", 0 0, L_0x15675ca90;  1 drivers
S_0x15674fe50 .scope generate, "add_bit[4]" "add_bit[4]" 3 26, 3 26 0, S_0x156733e30;
 .timescale 0 0;
P_0x156750050 .param/l "i" 1 3 26, +C4<0100>;
S_0x1567500d0 .scope generate, "genblk1" "genblk1" 3 27, 3 27 0, S_0x15674fe50;
 .timescale 0 0;
S_0x156750290 .scope module, "fa" "fulladder" 3 36, 3 48 0, S_0x1567500d0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "cin";
    .port_info 3 /OUTPUT 1 "sum";
    .port_info 4 /OUTPUT 1 "cout";
L_0x15675d400 .functor XOR 1, L_0x15675d970, L_0x15675da90, C4<0>, C4<0>;
L_0x15675d470 .functor XOR 1, L_0x15675d400, L_0x15675dc20, C4<0>, C4<0>;
L_0x15675d4e0 .functor AND 1, L_0x15675d970, L_0x15675da90, C4<1>, C4<1>;
L_0x15675d5d0 .functor AND 1, L_0x15675d970, L_0x15675dc20, C4<1>, C4<1>;
L_0x15675d680 .functor OR 1, L_0x15675d4e0, L_0x15675d5d0, C4<0>, C4<0>;
L_0x15675d790 .functor AND 1, L_0x15675da90, L_0x15675dc20, C4<1>, C4<1>;
L_0x15675d800 .functor OR 1, L_0x15675d680, L_0x15675d790, C4<0>, C4<0>;
v0x1567504d0_0 .net *"_ivl_0", 0 0, L_0x15675d400;  1 drivers
v0x156750570_0 .net *"_ivl_10", 0 0, L_0x15675d790;  1 drivers
v0x156750620_0 .net *"_ivl_4", 0 0, L_0x15675d4e0;  1 drivers
v0x1567506e0_0 .net *"_ivl_6", 0 0, L_0x15675d5d0;  1 drivers
v0x156750790_0 .net *"_ivl_8", 0 0, L_0x15675d680;  1 drivers
v0x156750880_0 .net "a", 0 0, L_0x15675d970;  1 drivers
v0x156750920_0 .net "b", 0 0, L_0x15675da90;  1 drivers
v0x1567509c0_0 .net "cin", 0 0, L_0x15675dc20;  1 drivers
v0x156750a60_0 .net "cout", 0 0, L_0x15675d800;  1 drivers
v0x156750b70_0 .net "sum", 0 0, L_0x15675d470;  1 drivers
S_0x156750c80 .scope generate, "add_bit[5]" "add_bit[5]" 3 26, 3 26 0, S_0x156733e30;
 .timescale 0 0;
P_0x156750e40 .param/l "i" 1 3 26, +C4<0101>;
S_0x156750ec0 .scope generate, "genblk1" "genblk1" 3 27, 3 27 0, S_0x156750c80;
 .timescale 0 0;
S_0x156751080 .scope module, "fa" "fulladder" 3 36, 3 48 0, S_0x156750ec0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "cin";
    .port_info 3 /OUTPUT 1 "sum";
    .port_info 4 /OUTPUT 1 "cout";
L_0x15675dd40 .functor XOR 1, L_0x15675e2c0, L_0x15675e4e0, C4<0>, C4<0>;
L_0x15675ddb0 .functor XOR 1, L_0x15675dd40, L_0x15675e700, C4<0>, C4<0>;
L_0x15675de20 .functor AND 1, L_0x15675e2c0, L_0x15675e4e0, C4<1>, C4<1>;
L_0x15675df10 .functor AND 1, L_0x15675e2c0, L_0x15675e700, C4<1>, C4<1>;
L_0x15675dfc0 .functor OR 1, L_0x15675de20, L_0x15675df10, C4<0>, C4<0>;
L_0x15675e100 .functor AND 1, L_0x15675e4e0, L_0x15675e700, C4<1>, C4<1>;
L_0x15675e170 .functor OR 1, L_0x15675dfc0, L_0x15675e100, C4<0>, C4<0>;
v0x1567512c0_0 .net *"_ivl_0", 0 0, L_0x15675dd40;  1 drivers
v0x156751380_0 .net *"_ivl_10", 0 0, L_0x15675e100;  1 drivers
v0x156751430_0 .net *"_ivl_4", 0 0, L_0x15675de20;  1 drivers
v0x1567514f0_0 .net *"_ivl_6", 0 0, L_0x15675df10;  1 drivers
v0x1567515a0_0 .net *"_ivl_8", 0 0, L_0x15675dfc0;  1 drivers
v0x156751690_0 .net "a", 0 0, L_0x15675e2c0;  1 drivers
v0x156751730_0 .net "b", 0 0, L_0x15675e4e0;  1 drivers
v0x1567517d0_0 .net "cin", 0 0, L_0x15675e700;  1 drivers
v0x156751870_0 .net "cout", 0 0, L_0x15675e170;  1 drivers
v0x156751980_0 .net "sum", 0 0, L_0x15675ddb0;  1 drivers
S_0x156751a90 .scope generate, "add_bit[6]" "add_bit[6]" 3 26, 3 26 0, S_0x156733e30;
 .timescale 0 0;
P_0x156751c50 .param/l "i" 1 3 26, +C4<0110>;
S_0x156751cd0 .scope generate, "genblk1" "genblk1" 3 27, 3 27 0, S_0x156751a90;
 .timescale 0 0;
S_0x156751e90 .scope module, "fa" "fulladder" 3 36, 3 48 0, S_0x156751cd0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "cin";
    .port_info 3 /OUTPUT 1 "sum";
    .port_info 4 /OUTPUT 1 "cout";
L_0x15675dbb0 .functor XOR 1, L_0x15675ecf0, L_0x15675ee10, C4<0>, C4<0>;
L_0x15675be70 .functor XOR 1, L_0x15675dbb0, L_0x15675e8a0, C4<0>, C4<0>;
L_0x15675e830 .functor AND 1, L_0x15675ecf0, L_0x15675ee10, C4<1>, C4<1>;
L_0x15675e940 .functor AND 1, L_0x15675ecf0, L_0x15675e8a0, C4<1>, C4<1>;
L_0x15675e9f0 .functor OR 1, L_0x15675e830, L_0x15675e940, C4<0>, C4<0>;
L_0x15675eb30 .functor AND 1, L_0x15675ee10, L_0x15675e8a0, C4<1>, C4<1>;
L_0x15675eba0 .functor OR 1, L_0x15675e9f0, L_0x15675eb30, C4<0>, C4<0>;
v0x1567520d0_0 .net *"_ivl_0", 0 0, L_0x15675dbb0;  1 drivers
v0x156752190_0 .net *"_ivl_10", 0 0, L_0x15675eb30;  1 drivers
v0x156752240_0 .net *"_ivl_4", 0 0, L_0x15675e830;  1 drivers
v0x156752300_0 .net *"_ivl_6", 0 0, L_0x15675e940;  1 drivers
v0x1567523b0_0 .net *"_ivl_8", 0 0, L_0x15675e9f0;  1 drivers
v0x1567524a0_0 .net "a", 0 0, L_0x15675ecf0;  1 drivers
v0x156752540_0 .net "b", 0 0, L_0x15675ee10;  1 drivers
v0x1567525e0_0 .net "cin", 0 0, L_0x15675e8a0;  1 drivers
v0x156752680_0 .net "cout", 0 0, L_0x15675eba0;  1 drivers
v0x156752790_0 .net "sum", 0 0, L_0x15675be70;  1 drivers
S_0x1567528a0 .scope generate, "add_bit[7]" "add_bit[7]" 3 26, 3 26 0, S_0x156733e30;
 .timescale 0 0;
P_0x156752a60 .param/l "i" 1 3 26, +C4<0111>;
S_0x156752ae0 .scope generate, "genblk1" "genblk1" 3 27, 3 27 0, S_0x1567528a0;
 .timescale 0 0;
S_0x156752ca0 .scope module, "fa" "fulladder" 3 36, 3 48 0, S_0x156752ae0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "cin";
    .port_info 3 /OUTPUT 1 "sum";
    .port_info 4 /OUTPUT 1 "cout";
L_0x15675e7a0 .functor XOR 1, L_0x15675f600, L_0x15675ef30, C4<0>, C4<0>;
L_0x15675f050 .functor XOR 1, L_0x15675e7a0, L_0x15675f850, C4<0>, C4<0>;
L_0x15675f120 .functor AND 1, L_0x15675f600, L_0x15675ef30, C4<1>, C4<1>;
L_0x15675f250 .functor AND 1, L_0x15675f600, L_0x15675f850, C4<1>, C4<1>;
L_0x15675f300 .functor OR 1, L_0x15675f120, L_0x15675f250, C4<0>, C4<0>;
L_0x15675f440 .functor AND 1, L_0x15675ef30, L_0x15675f850, C4<1>, C4<1>;
L_0x15675f4b0 .functor OR 1, L_0x15675f300, L_0x15675f440, C4<0>, C4<0>;
v0x156752ee0_0 .net *"_ivl_0", 0 0, L_0x15675e7a0;  1 drivers
v0x156752fa0_0 .net *"_ivl_10", 0 0, L_0x15675f440;  1 drivers
v0x156753050_0 .net *"_ivl_4", 0 0, L_0x15675f120;  1 drivers
v0x156753110_0 .net *"_ivl_6", 0 0, L_0x15675f250;  1 drivers
v0x1567531c0_0 .net *"_ivl_8", 0 0, L_0x15675f300;  1 drivers
v0x1567532b0_0 .net "a", 0 0, L_0x15675f600;  1 drivers
v0x156753350_0 .net "b", 0 0, L_0x15675ef30;  1 drivers
v0x1567533f0_0 .net "cin", 0 0, L_0x15675f850;  1 drivers
v0x156753490_0 .net "cout", 0 0, L_0x15675f4b0;  1 drivers
v0x1567535a0_0 .net "sum", 0 0, L_0x15675f050;  1 drivers
S_0x1567536b0 .scope generate, "add_bit[8]" "add_bit[8]" 3 26, 3 26 0, S_0x156733e30;
 .timescale 0 0;
P_0x156750010 .param/l "i" 1 3 26, +C4<01000>;
S_0x156753930 .scope generate, "genblk1" "genblk1" 3 27, 3 27 0, S_0x1567536b0;
 .timescale 0 0;
S_0x156753af0 .scope module, "fa" "fulladder" 3 36, 3 48 0, S_0x156753930;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "cin";
    .port_info 3 /OUTPUT 1 "sum";
    .port_info 4 /OUTPUT 1 "cout";
L_0x15675f1b0 .functor XOR 1, L_0x15675ff50, L_0x156760070, C4<0>, C4<0>;
L_0x15675f720 .functor XOR 1, L_0x15675f1b0, L_0x156760260, C4<0>, C4<0>;
L_0x15675fa70 .functor AND 1, L_0x15675ff50, L_0x156760070, C4<1>, C4<1>;
L_0x15675fb80 .functor AND 1, L_0x15675ff50, L_0x156760260, C4<1>, C4<1>;
L_0x15675fc50 .functor OR 1, L_0x15675fa70, L_0x15675fb80, C4<0>, C4<0>;
L_0x15675fd90 .functor AND 1, L_0x156760070, L_0x156760260, C4<1>, C4<1>;
L_0x15675fe00 .functor OR 1, L_0x15675fc50, L_0x15675fd90, C4<0>, C4<0>;
v0x156753d60_0 .net *"_ivl_0", 0 0, L_0x15675f1b0;  1 drivers
v0x156753e10_0 .net *"_ivl_10", 0 0, L_0x15675fd90;  1 drivers
v0x156753eb0_0 .net *"_ivl_4", 0 0, L_0x15675fa70;  1 drivers
v0x156753f60_0 .net *"_ivl_6", 0 0, L_0x15675fb80;  1 drivers
v0x156754010_0 .net *"_ivl_8", 0 0, L_0x15675fc50;  1 drivers
v0x156754100_0 .net "a", 0 0, L_0x15675ff50;  1 drivers
v0x1567541a0_0 .net "b", 0 0, L_0x156760070;  1 drivers
v0x156754240_0 .net "cin", 0 0, L_0x156760260;  1 drivers
v0x1567542e0_0 .net "cout", 0 0, L_0x15675fe00;  1 drivers
v0x1567543f0_0 .net "sum", 0 0, L_0x15675f720;  1 drivers
S_0x156754500 .scope generate, "add_bit[9]" "add_bit[9]" 3 26, 3 26 0, S_0x156733e30;
 .timescale 0 0;
P_0x1567546c0 .param/l "i" 1 3 26, +C4<01001>;
S_0x156754740 .scope generate, "genblk1" "genblk1" 3 27, 3 27 0, S_0x156754500;
 .timescale 0 0;
S_0x156754900 .scope module, "fa" "fulladder" 3 36, 3 48 0, S_0x156754740;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "cin";
    .port_info 3 /OUTPUT 1 "sum";
    .port_info 4 /OUTPUT 1 "cout";
L_0x15675f970 .functor XOR 1, L_0x1567608d0, L_0x156760ad0, C4<0>, C4<0>;
L_0x15675dcc0 .functor XOR 1, L_0x15675f970, L_0x156760190, C4<0>, C4<0>;
L_0x156760400 .functor AND 1, L_0x1567608d0, L_0x156760ad0, C4<1>, C4<1>;
L_0x156760510 .functor AND 1, L_0x1567608d0, L_0x156760190, C4<1>, C4<1>;
L_0x1567605e0 .functor OR 1, L_0x156760400, L_0x156760510, C4<0>, C4<0>;
L_0x1567606f0 .functor AND 1, L_0x156760ad0, L_0x156760190, C4<1>, C4<1>;
L_0x156760760 .functor OR 1, L_0x1567605e0, L_0x1567606f0, C4<0>, C4<0>;
v0x156754b70_0 .net *"_ivl_0", 0 0, L_0x15675f970;  1 drivers
v0x156754c20_0 .net *"_ivl_10", 0 0, L_0x1567606f0;  1 drivers
v0x156754cc0_0 .net *"_ivl_4", 0 0, L_0x156760400;  1 drivers
v0x156754d70_0 .net *"_ivl_6", 0 0, L_0x156760510;  1 drivers
v0x156754e20_0 .net *"_ivl_8", 0 0, L_0x1567605e0;  1 drivers
v0x156754f10_0 .net "a", 0 0, L_0x1567608d0;  1 drivers
v0x156754fb0_0 .net "b", 0 0, L_0x156760ad0;  1 drivers
v0x156755050_0 .net "cin", 0 0, L_0x156760190;  1 drivers
v0x1567550f0_0 .net "cout", 0 0, L_0x156760760;  1 drivers
v0x156755200_0 .net "sum", 0 0, L_0x15675dcc0;  1 drivers
S_0x156755310 .scope generate, "add_bit[10]" "add_bit[10]" 3 26, 3 26 0, S_0x156733e30;
 .timescale 0 0;
P_0x1567554d0 .param/l "i" 1 3 26, +C4<01010>;
S_0x156755550 .scope generate, "genblk1" "genblk1" 3 27, 3 27 0, S_0x156755310;
 .timescale 0 0;
S_0x156755710 .scope module, "fa" "fulladder" 3 36, 3 48 0, S_0x156755550;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "cin";
    .port_info 3 /OUTPUT 1 "sum";
    .port_info 4 /OUTPUT 1 "cout";
L_0x156760470 .functor XOR 1, L_0x1567611e0, L_0x156761300, C4<0>, C4<0>;
L_0x1567609f0 .functor XOR 1, L_0x156760470, L_0x156760d80, C4<0>, C4<0>;
L_0x156760a60 .functor AND 1, L_0x1567611e0, L_0x156761300, C4<1>, C4<1>;
L_0x156760e20 .functor AND 1, L_0x1567611e0, L_0x156760d80, C4<1>, C4<1>;
L_0x156760ef0 .functor OR 1, L_0x156760a60, L_0x156760e20, C4<0>, C4<0>;
L_0x156761000 .functor AND 1, L_0x156761300, L_0x156760d80, C4<1>, C4<1>;
L_0x156761070 .functor OR 1, L_0x156760ef0, L_0x156761000, C4<0>, C4<0>;
v0x156755980_0 .net *"_ivl_0", 0 0, L_0x156760470;  1 drivers
v0x156755a30_0 .net *"_ivl_10", 0 0, L_0x156761000;  1 drivers
v0x156755ad0_0 .net *"_ivl_4", 0 0, L_0x156760a60;  1 drivers
v0x156755b80_0 .net *"_ivl_6", 0 0, L_0x156760e20;  1 drivers
v0x156755c30_0 .net *"_ivl_8", 0 0, L_0x156760ef0;  1 drivers
v0x156755d20_0 .net "a", 0 0, L_0x1567611e0;  1 drivers
v0x156755dc0_0 .net "b", 0 0, L_0x156761300;  1 drivers
v0x156755e60_0 .net "cin", 0 0, L_0x156760d80;  1 drivers
v0x156755f00_0 .net "cout", 0 0, L_0x156761070;  1 drivers
v0x156756010_0 .net "sum", 0 0, L_0x1567609f0;  1 drivers
S_0x156756120 .scope generate, "add_bit[11]" "add_bit[11]" 3 26, 3 26 0, S_0x156733e30;
 .timescale 0 0;
P_0x1567562e0 .param/l "i" 1 3 26, +C4<01011>;
S_0x156756360 .scope generate, "genblk1" "genblk1" 3 27, 3 27 0, S_0x156756120;
 .timescale 0 0;
S_0x156756520 .scope module, "fa" "fulladder" 3 36, 3 48 0, S_0x156756360;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "cin";
    .port_info 3 /OUTPUT 1 "sum";
    .port_info 4 /OUTPUT 1 "cout";
L_0x156760c70 .functor XOR 1, L_0x156761ad0, L_0x156761420, C4<0>, C4<0>;
L_0x156760ce0 .functor XOR 1, L_0x156760c70, L_0x156761d80, C4<0>, C4<0>;
L_0x1567615e0 .functor AND 1, L_0x156761ad0, L_0x156761420, C4<1>, C4<1>;
L_0x156761710 .functor AND 1, L_0x156761ad0, L_0x156761d80, C4<1>, C4<1>;
L_0x1567617e0 .functor OR 1, L_0x1567615e0, L_0x156761710, C4<0>, C4<0>;
L_0x1567618f0 .functor AND 1, L_0x156761420, L_0x156761d80, C4<1>, C4<1>;
L_0x156761960 .functor OR 1, L_0x1567617e0, L_0x1567618f0, C4<0>, C4<0>;
v0x156756790_0 .net *"_ivl_0", 0 0, L_0x156760c70;  1 drivers
v0x156756840_0 .net *"_ivl_10", 0 0, L_0x1567618f0;  1 drivers
v0x1567568e0_0 .net *"_ivl_4", 0 0, L_0x1567615e0;  1 drivers
v0x156756990_0 .net *"_ivl_6", 0 0, L_0x156761710;  1 drivers
v0x156756a40_0 .net *"_ivl_8", 0 0, L_0x1567617e0;  1 drivers
v0x156756b30_0 .net "a", 0 0, L_0x156761ad0;  1 drivers
v0x156756bd0_0 .net "b", 0 0, L_0x156761420;  1 drivers
v0x156756c70_0 .net "cin", 0 0, L_0x156761d80;  1 drivers
v0x156756d10_0 .net "cout", 0 0, L_0x156761960;  1 drivers
v0x156756e20_0 .net "sum", 0 0, L_0x156760ce0;  1 drivers
S_0x156756f30 .scope generate, "add_bit[12]" "add_bit[12]" 3 26, 3 26 0, S_0x156733e30;
 .timescale 0 0;
P_0x1567570f0 .param/l "i" 1 3 26, +C4<01100>;
S_0x156757170 .scope generate, "genblk1" "genblk1" 3 27, 3 27 0, S_0x156756f30;
 .timescale 0 0;
S_0x156757330 .scope module, "fa" "fulladder" 3 36, 3 48 0, S_0x156757170;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "cin";
    .port_info 3 /OUTPUT 1 "sum";
    .port_info 4 /OUTPUT 1 "cout";
L_0x156761670 .functor XOR 1, L_0x1567623e0, L_0x156762500, C4<0>, C4<0>;
L_0x156761bf0 .functor XOR 1, L_0x156761670, L_0x156762620, C4<0>, C4<0>;
L_0x156761c60 .functor AND 1, L_0x1567623e0, L_0x156762500, C4<1>, C4<1>;
L_0x156762040 .functor AND 1, L_0x1567623e0, L_0x156762620, C4<1>, C4<1>;
L_0x1567620f0 .functor OR 1, L_0x156761c60, L_0x156762040, C4<0>, C4<0>;
L_0x156762200 .functor AND 1, L_0x156762500, L_0x156762620, C4<1>, C4<1>;
L_0x156762270 .functor OR 1, L_0x1567620f0, L_0x156762200, C4<0>, C4<0>;
v0x1567575a0_0 .net *"_ivl_0", 0 0, L_0x156761670;  1 drivers
v0x156757650_0 .net *"_ivl_10", 0 0, L_0x156762200;  1 drivers
v0x1567576f0_0 .net *"_ivl_4", 0 0, L_0x156761c60;  1 drivers
v0x1567577a0_0 .net *"_ivl_6", 0 0, L_0x156762040;  1 drivers
v0x156757850_0 .net *"_ivl_8", 0 0, L_0x1567620f0;  1 drivers
v0x156757940_0 .net "a", 0 0, L_0x1567623e0;  1 drivers
v0x1567579e0_0 .net "b", 0 0, L_0x156762500;  1 drivers
v0x156757a80_0 .net "cin", 0 0, L_0x156762620;  1 drivers
v0x156757b20_0 .net "cout", 0 0, L_0x156762270;  1 drivers
v0x156757c30_0 .net "sum", 0 0, L_0x156761bf0;  1 drivers
S_0x156757d40 .scope generate, "add_bit[13]" "add_bit[13]" 3 26, 3 26 0, S_0x156733e30;
 .timescale 0 0;
P_0x156757f00 .param/l "i" 1 3 26, +C4<01101>;
S_0x156757f80 .scope generate, "genblk1" "genblk1" 3 27, 3 27 0, S_0x156757d40;
 .timescale 0 0;
S_0x156758140 .scope module, "fa" "fulladder" 3 36, 3 48 0, S_0x156757f80;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "cin";
    .port_info 3 /OUTPUT 1 "sum";
    .port_info 4 /OUTPUT 1 "cout";
L_0x156761fd0 .functor XOR 1, L_0x156762cd0, L_0x15675e3e0, C4<0>, C4<0>;
L_0x156762740 .functor XOR 1, L_0x156761fd0, L_0x156761f20, C4<0>, C4<0>;
L_0x1567627f0 .functor AND 1, L_0x156762cd0, L_0x15675e3e0, C4<1>, C4<1>;
L_0x156762900 .functor AND 1, L_0x156762cd0, L_0x156761f20, C4<1>, C4<1>;
L_0x1567629d0 .functor OR 1, L_0x1567627f0, L_0x156762900, C4<0>, C4<0>;
L_0x156762b10 .functor AND 1, L_0x15675e3e0, L_0x156761f20, C4<1>, C4<1>;
L_0x156762b80 .functor OR 1, L_0x1567629d0, L_0x156762b10, C4<0>, C4<0>;
v0x1567583b0_0 .net *"_ivl_0", 0 0, L_0x156761fd0;  1 drivers
v0x156758460_0 .net *"_ivl_10", 0 0, L_0x156762b10;  1 drivers
v0x156758500_0 .net *"_ivl_4", 0 0, L_0x1567627f0;  1 drivers
v0x1567585b0_0 .net *"_ivl_6", 0 0, L_0x156762900;  1 drivers
v0x156758660_0 .net *"_ivl_8", 0 0, L_0x1567629d0;  1 drivers
v0x156758750_0 .net "a", 0 0, L_0x156762cd0;  1 drivers
v0x1567587f0_0 .net "b", 0 0, L_0x15675e3e0;  1 drivers
v0x156758890_0 .net "cin", 0 0, L_0x156761f20;  1 drivers
v0x156758930_0 .net "cout", 0 0, L_0x156762b80;  1 drivers
v0x156758a40_0 .net "sum", 0 0, L_0x156762740;  1 drivers
S_0x156758b50 .scope generate, "add_bit[14]" "add_bit[14]" 3 26, 3 26 0, S_0x156733e30;
 .timescale 0 0;
P_0x156758d10 .param/l "i" 1 3 26, +C4<01110>;
S_0x156758d90 .scope generate, "genblk1" "genblk1" 3 27, 3 27 0, S_0x156758b50;
 .timescale 0 0;
S_0x156758f50 .scope module, "fa" "fulladder" 3 36, 3 48 0, S_0x156758d90;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "cin";
    .port_info 3 /OUTPUT 1 "sum";
    .port_info 4 /OUTPUT 1 "cout";
L_0x156762880 .functor XOR 1, L_0x156763810, L_0x156763930, C4<0>, C4<0>;
L_0x15675e680 .functor XOR 1, L_0x156762880, L_0x156763330, C4<0>, C4<0>;
L_0x156762ff0 .functor AND 1, L_0x156763810, L_0x156763930, C4<1>, C4<1>;
L_0x156763480 .functor AND 1, L_0x156763810, L_0x156763330, C4<1>, C4<1>;
L_0x156763530 .functor OR 1, L_0x156762ff0, L_0x156763480, C4<0>, C4<0>;
L_0x156763650 .functor AND 1, L_0x156763930, L_0x156763330, C4<1>, C4<1>;
L_0x1567636c0 .functor OR 1, L_0x156763530, L_0x156763650, C4<0>, C4<0>;
v0x1567591c0_0 .net *"_ivl_0", 0 0, L_0x156762880;  1 drivers
v0x156759270_0 .net *"_ivl_10", 0 0, L_0x156763650;  1 drivers
v0x156759310_0 .net *"_ivl_4", 0 0, L_0x156762ff0;  1 drivers
v0x1567593c0_0 .net *"_ivl_6", 0 0, L_0x156763480;  1 drivers
v0x156759470_0 .net *"_ivl_8", 0 0, L_0x156763530;  1 drivers
v0x156759560_0 .net "a", 0 0, L_0x156763810;  1 drivers
v0x156759600_0 .net "b", 0 0, L_0x156763930;  1 drivers
v0x1567596a0_0 .net "cin", 0 0, L_0x156763330;  1 drivers
v0x156759740_0 .net "cout", 0 0, L_0x1567636c0;  1 drivers
v0x156759850_0 .net "sum", 0 0, L_0x15675e680;  1 drivers
S_0x156759960 .scope generate, "add_bit[15]" "add_bit[15]" 3 26, 3 26 0, S_0x156733e30;
 .timescale 0 0;
P_0x156759b20 .param/l "i" 1 3 26, +C4<01111>;
S_0x156759ba0 .scope generate, "genblk1" "genblk1" 3 27, 3 27 0, S_0x156759960;
 .timescale 0 0;
S_0x156759d60 .scope module, "fa" "fulladder" 3 36, 3 48 0, S_0x156759ba0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "cin";
    .port_info 3 /OUTPUT 1 "sum";
    .port_info 4 /OUTPUT 1 "cout";
L_0x156763060 .functor XOR 1, L_0x1567640f0, L_0x156763a50, C4<0>, C4<0>;
L_0x156763bb0 .functor XOR 1, L_0x156763060, L_0x156764380, C4<0>, C4<0>;
L_0x156763c20 .functor AND 1, L_0x1567640f0, L_0x156763a50, C4<1>, C4<1>;
L_0x156763d30 .functor AND 1, L_0x1567640f0, L_0x156764380, C4<1>, C4<1>;
L_0x156763e00 .functor OR 1, L_0x156763c20, L_0x156763d30, C4<0>, C4<0>;
L_0x156763f10 .functor AND 1, L_0x156763a50, L_0x156764380, C4<1>, C4<1>;
L_0x156763f80 .functor OR 1, L_0x156763e00, L_0x156763f10, C4<0>, C4<0>;
v0x156759fd0_0 .net *"_ivl_0", 0 0, L_0x156763060;  1 drivers
v0x15675a080_0 .net *"_ivl_10", 0 0, L_0x156763f10;  1 drivers
v0x15675a120_0 .net *"_ivl_4", 0 0, L_0x156763c20;  1 drivers
v0x15675a1d0_0 .net *"_ivl_6", 0 0, L_0x156763d30;  1 drivers
v0x15675a280_0 .net *"_ivl_8", 0 0, L_0x156763e00;  1 drivers
v0x15675a370_0 .net "a", 0 0, L_0x1567640f0;  1 drivers
v0x15675a410_0 .net "b", 0 0, L_0x156763a50;  1 drivers
v0x15675a4b0_0 .net "cin", 0 0, L_0x156764380;  1 drivers
v0x15675a550_0 .net "cout", 0 0, L_0x156763f80;  1 drivers
v0x15675a660_0 .net "sum", 0 0, L_0x156763bb0;  1 drivers
    .scope S_0x156736040;
T_0 ;
    %vpi_call 2 14 "$dumpfile", "inc16.vcd" {0 0 0};
    %vpi_call 2 15 "$dumpvars", 32'sb00000000000000000000000000000000, S_0x156736040 {0 0 0};
    %vpi_call 2 17 "$display", "        IN         |        OUT" {0 0 0};
    %vpi_call 2 18 "$monitor", "%b | %b", v0x15675ac70_0, v0x15675ad50_0 {0 0 0};
    %pushi/vec4 0, 0, 16;
    %store/vec4 v0x15675ac70_0, 0, 16;
    %delay 10000, 0;
    %pushi/vec4 1, 0, 16;
    %store/vec4 v0x15675ac70_0, 0, 16;
    %delay 10000, 0;
    %pushi/vec4 15, 0, 16;
    %store/vec4 v0x15675ac70_0, 0, 16;
    %delay 10000, 0;
    %pushi/vec4 65534, 0, 16;
    %store/vec4 v0x15675ac70_0, 0, 16;
    %delay 10000, 0;
    %pushi/vec4 65535, 0, 16;
    %store/vec4 v0x15675ac70_0, 0, 16;
    %delay 10000, 0;
    %vpi_call 2 26 "$finish" {0 0 0};
    %end;
    .thread T_0;
# The file index is used to find the file name in the following table.
:file_names 4;
    "N/A";
    "<interactive>";
    "tb_inc16.v";
    "inc16.v";
